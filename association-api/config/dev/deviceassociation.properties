#
#  *******************************************************************************
#  Copyright (c) 2023-24 Harman International
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#  *******************************************************************************
#

# ###############################
#  hcp-deviceassociation-lib DEVELOPMENT         
# ###############################
service_auth_rest_url_base=http://docker_host:8080/hcp-auth-webapp/
service_user_auth_rest_url_base=http://docker_host:8083/hcp-userauth-webapp/
service_deviceinfo_rest_url_base=http://docker_host:8082/hcp-deviceinfoquery-webapp/
service_notification_kafka_host=10.0.0.175:9092,10.0.0.18:9092,10.0.0.102:9092
#service_sdp_profile_url_base=http://sdpesbs4.ahanet.net:8281/
service_is_baseurl=https://sdpiss4.ahanet.net:443/
base_service_api_url=http://andromeda-api-elb-875792340.us-east-1.elb.amazonaws.com/haa-api-dev
reset_device_url_segment=v1/device/deviceOperation
service_is_filter_by_username_url=wso2/scim/Users?filter=userNameeq
service_is_user_name=admin
service_is_password=admin
#service.sdp.rest.profile=/sdp/1.1/user/profile
service_deviceinfo_rest_device_info=/getSpecByID/
service_auth_rest_deactivate_device=/device/deactivate
service_auth_rest_v2_deactivate_device=/v2/device/deactivate
service_auth_rest_set_ready_to_activate_device=/device/setReadyToActivate
service_user_auth_rest_login=/user/login
service_user_auth_username=device_association_sys_user
#service_user_auth_password=********
service_notification_kafka_topicname=haa-harman-dev-haa-internal
kafka_event_topic=haa-harman-dev-events
kafka_vin_topic=haa-harman-dev-vehicle-profile-pp-vin
kafka_asset_activation_topic=activation
#sso_security_key=********
service_sdp_user_for_state_change=bob_argo
service_deviceinfo_rest_deviceinfo_stateupdate=/v1/devices/state
service_notification_kafka_ssl_enable=true
service_notification_kafka_ssl_client_auth=required
service_notification_kafka_client_keystore=/kafka/ssl/kafka.client.keystore.jks
#service_notification_kafka_client_keystore_password=********
#service_notification_kafka_client_key_password=********
service_notification_kafka_client_truststore=/kafka/ssl/kafka.client.truststore.jks
#service_notification_kafka_client_truststore_password=********
# AWS native configuration
env_profile=ENV_AWS_NATIVE
kinesis_stream_name=san-stage-dev-haa-internal
kinesis_ecs_region=us-east-1
# Oauth related properities
OAuth2_base_url=https://dev-ignite-is.ahanet.net
OAuth2_basic_auth_header="RzBzalB3Y0l3bzdDejZaeVNNWnpISU1MMDdJYTpaVjRXUFQ4WmVkVE5qOEZHS29qT0F5Ukx2amdh"
OAuth2_intropsect_method=oauth2/introspect
# Vault related properties
vault_server_ip_address=10.0.0.66
vault_server_port=8200
environment=dev
secerets_vault_enable_flg=true
postgres_vault_enable_flg=true
postgres_url=jdbc:postgresql://localhost:5432/dev-hcpdb
postgres_driver_class_name=org.postgresql.Driver
#Schedule time delay is in milli secs
postgres_vault_leaseIntervalGap=300000
postgres_vault_refreshCheckInterval=300000
# enable this to send reset device request
send_reset_device_enabled=false
# enable this to activate pin validation procedure
pin.validation=false
# whitelist users
white_list_users=subscription
#enable this to send message to device-message module
device_message_enabled=true
device_mqtt_message_base_url=http://core-api-message-1928655674.us-east-1.elb.amazonaws.com/harman-dev
device_mqtt_message_base_url_version=v1
#Flag to change current device state PROVISIONED
current.device.provisioning=false
#Vehicle-profile-endpoints
vehicle_profile_base_url="http://vehicle-profile-api-int-svc:8080/"
vehicle_profile_base_url_version="v1"
vehicle_profile_terminate_base_url_version=v1.0
vehicle_profile_terminate=/vehicleProfiles/terminate/device
vehicle_profile_vin_decoder="CODE_VALUE"
#Flag to enable or disable vin association
vin_association_enabled=false
sim_suspend_check=false
real_vehicle_profile_creation_for=vehiclespecification
wam_enabled=false
# SpringAuth related properties
#client_id=*****
#client_secret=*****
spring_auth_service_url=https://uidam-authorization-server.eks-ignite-dev.ic.aws.harmandev.com/oauth2/token
spring_auth_base_url=https://uidam-auth-management.eks-ignite-dev.ic.aws.harmandev.com/v1/oauth2/client
#SWM properties
swm_base_url=https://swm.stage.ahanet.net
swm_login_api_url=/sma/api/login
swm_update_api=/sma/api/v1.0/vehicles
swm_delete_api=/sma/api/v1.0/vehicles/delete
swm_vehicle_models=/sma/api/v1.0/vehicleModels?itemsPerPage=1500&page=0&fields=MODEL_CODE,NAME
swm_vehicles=/sma/api/v1.0/vehicles/filter?page=0&itemsPerPage=100&sortField=LAST_ACCESS_TIME&sortOrder=false
#swm_password=*******
swm_username=*******
swm_domain_id=40835552926145409927638592560729411453
#Domain Id and Vehicle Model Id value will vary from env to env
swm_vehicle_model_id=66520682455292139068090871208168296344
swm_domain=
#Device properties
device_creation_type=default
swm_integration_enabled=true
initial_pool_size=3
min_pool_size=3
max_pool_size=50
max_idle_time=5
acquire_increment=5
idle_connection_test_period=300
#Allowed Device types for Device creation
allowed_device_types=dongle,dashcam,tcu,hu
#Vault Webhook properties
service_notification_kafka_client_key_password=${service_notification_kafka_client_key_password:test}
service_notification_kafka_client_keystore_password=${service_notification_kafka_client_keystore_password:test}
service_notification_kafka_client_truststore_password=${service_notification_kafka_client_truststore_password:test}
service_user_auth_password=${service_user_auth_password:test}
sso_security_key=${sso_security_key:test}
client_id=${client_id:test}
client_secret=${client_secret:test}
swm_password=${swm_password:test}
postgres_username=${postgres_username:test}
postgres_password=${postgres_password:test}
#api-gateway properties
api_registry_enabled=true
api_security_enabled=false
spring_application_version=1.0
spring_application_servicename=association-api-int-svc
spring_application_name=association-api
server_port=8080
openapi_path_include="/v1/**, /v2/**, /v3/**"
openapi_path_exclude=""
api_registry_service_name="http://api-registry-int-svc"
api_context-path=/vehicle-association-service